#include "StdAfx.h"
#include "TileMap.h"

TileMap::TileMap(Graphics^ panelCanvas)
	{
		canvas = panelCanvas;

		rGen = gcnew Random();

		tiles = gcnew TileList();

		tileMap = gcnew array<int, 2>(N_ROWS, N_COLS);	

		xPos = 0;
		yPos = 0;
	}

void TileMap::generateTileMap()
	{
		/*array<int,2>^ map = gcnew array<int,2>
		{
			{ 2,2,2,2,2,2,2,2,2,4,4,2,2,2,2,2,2,2,2,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,2,2,3,3,3,2,2,2,4,4,2,2,2,3,3,3,2,2,2 },
			{ 4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4 },
			{ 4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4 },
			{ 2,2,2,3,3,3,2,2,2,4,4,2,2,2,3,3,3,2,2,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,3,3,3,3,3,3,3,2,4,4,2,3,3,3,3,3,3,3,2 },
			{ 2,2,2,2,2,2,2,2,2,4,4,2,2,2,2,2,2,2,2,2 }
		};*/

		array<int,2>^ map = gcnew array<int,2>
		{
			{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
			{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
			{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 },
			{ 1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1 },
			{ 1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1 },
			{ 1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1 },
			{ 1,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,2,1,1,1,1,1,1,1,1,1,1,1,3,3,1 },
			{ 1,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,2,1,2,2,2,2,2,2,2,2,2,1,3,3,1 },
			{ 1,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,2,1,2,2,2,2,3,3,2,2,2,1,3,3,1 },
			{ 1,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,2,1,1,3,3,1,1,1,1,1,1,1,1,3,3,1,1,2,3,3,2,1,2,2,2,2,3,3,2,2,2,1,3,3,1 },
			{ 1,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,3,3,2,1,1,3,3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,3,2,1,2,2,2,2,1,3,2,2,2,1,3,3,1 },
			{ 1,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,3,3,2,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,2,3,3,2,1,2,2,2,2,1,3,2,2,2,1,3,3,1 },
			{ 1,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,3,3,2,2,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,2,3,3,2,1,2,2,2,2,1,3,2,2,2,1,3,3,1 },
			{ 1,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,3,3,3,3,2,2,1,1,1,1,1,1,3,1,1,1,1,1,1,1,2,3,3,2,1,2,2,2,2,1,3,2,2,2,1,3,3,1 },
			{ 1,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,3,2,2,2,3,3,3,3,3,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,3,3,2,1,1,1,1,1,1,3,2,2,2,1,3,3,1 },
			{ 1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1,3,3,1 },
			{ 1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1,3,3,1 },
			{ 1,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,1,1,1,1,1,1,3,2,2,2,1,3,3,1 },
			{ 1,3,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,3,3,3,3,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,1,2,2,2,2,1,3,2,2,2,1,3,3,1 },
			{ 1,3,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,3,3,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,1,2,2,2,2,1,3,2,2,2,1,3,3,1 },
			{ 1,3,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,1,2,2,2,2,1,3,2,2,2,1,3,3,1 },
			{ 1,3,3,2,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,2,3,3,2,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,2,2,2,1,3,2,2,2,1,3,3,1 },
			{ 1,3,3,2,1,1,3,3,1,1,1,1,3,1,1,1,1,3,3,1,1,1,2,3,3,2,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,2,3,2,1,2,2,2,2,3,3,2,2,2,1,3,3,1 },
			{ 1,3,3,2,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,2,3,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,1,2,2,2,2,3,3,2,2,2,1,3,3,1 },
			{ 1,3,3,2,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,2,3,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,1,2,2,2,2,2,2,2,2,2,1,3,3,1 },
			{ 1,3,3,2,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,2,3,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,1,2,2,2,2,2,2,2,2,2,1,3,3,1 },
			{ 1,3,3,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,1,1,1,1,1,1,1,1,1,1,1,3,3,1 },
			{ 1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1 },
			{ 1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1 },
			{ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 }
		};
		//===================================================================
		// Generate map of random tiles
		//===================================================================
		for(int col = 0; col < N_COLS; col++)
			for(int row = 0; row < N_ROWS; row++)
				tileMap[row, col] = map[row, col] - 1;
				//tileMap[col, row] = rGen->Next(N_TILES);
	}

void TileMap::updateTilePosition()
	{
		xPos += 2 * xDirection;
		yPos += 2 * yDirection;
	}

void TileMap::drawTileMap()
	{
		//===================================================================
		// Draw tile bitmap to canvas
		//===================================================================
		for(int col = 0; col < N_COLS; col++)
		{
			for(int row = 0; row < N_ROWS; row++)
			{
				Bitmap^ tileImage = tiles->getTileBitmap(tileMap[row, col]);

				int x = xPos + (col * T_SIZE);
				int y = yPos + (row * T_SIZE);

				canvas->DrawImage(tileImage, x, y); 
			}
		}
	}

void TileMap::setMapValue(int col, int row, int tileValue)
	{
		//===================================================================
		// Return bitmap of a indexed tile
		//===================================================================
		tileMap[col,row] = tileValue;
	}

int TileMap::getMapValue(int col, int row)
	{
		//===================================================================
		// Return bitmap of a indexed tile
		//===================================================================
		return tileMap[col, row];
	}